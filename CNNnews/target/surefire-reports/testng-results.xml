<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="10" total="103" passed="88">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/jewal/IntelliJ/WebAutomationGroup3/CNNnews/target/surefire-reports/html]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Verify Parenting Content in Health Page]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Verify Content Politics Health Page]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Verify World Asia News in Health Page]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Verify IMAGE in Health Page]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Politics]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Verify IMAGE in Health Page]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Verify Popular Topics Health Page]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Verify Content in Health Page]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Verify Top Stories in Health Page]]>
    </line>
    <line>
      <![CDATA[CnnHealth  -> Verify Australia News in Health Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Feature Section in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines5 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines6 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines2 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines3 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines4 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines1 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines7 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines15 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines16 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines17 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines8 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines9 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines10 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines11 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines12 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines13 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Headlines14 in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CNNWorld  -> Verify Image in Cnn World Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify url in U.S. Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify Stories 2 in U.S. Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify Bottom topics in U.S. Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify IMAGE in U.S. Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify Image in U.S. Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify Stories in U.S. Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify Stories 1 in U.S. Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify IMAGE in U.S. Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify Text in U.S. Page]]>
    </line>
    <line>
      <![CDATA[CnnUsPage  -> Verify Stories 1 in U.S. Page]]>
    </line>
    <line>
      <![CDATA[TestSearch : ]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Search Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  ->  Christchurch]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Africa Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom America Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Art Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Asia Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom BaseBall Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom BasketBall Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Home Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title Business Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom CNN Film Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom China Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify CNN Logo]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom College Football Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Crime And Justice Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Design Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Destination Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Digital Studio Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Energy And Environment Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title Entertainment Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Europe Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Weather Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Facts Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Fashion Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Fitness Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Food And Drinks Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Food Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom HLN Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title Health Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom India Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Live Longer Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title LiveTV Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Luxury Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Menu Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Middle East Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Olympic Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title Opinion Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Opinion Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title Politics Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Soccer News Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Space And Science Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title Sports Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title Style Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Supreme Court Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title Travel Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title U.S. Edition Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title U.S. Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title Video Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom Wellness Source]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Title World Link Tab]]>
    </line>
    <line>
      <![CDATA[HomePage  -> Verify Bottom World News Source]]>
    </line>
    <line>
      <![CDATA[TestHomePage  -> Verify Page Title ]]>
    </line>
  </reporter-output>
  <suite name="Command line suite" duration-ms="1010607" started-at="2019-03-29T04:15:30Z" finished-at="2019-03-29T04:32:20Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="1010607" started-at="2019-03-29T04:15:30Z" finished-at="2019-03-29T04:32:20Z">
      <class name="testcnnhealthpage.TestCnnHealth">
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="setUp" is-config="true" duration-ms="2796" started-at="2019-03-29T04:15:30Z" finished-at="2019-03-29T04:15:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[saucelabs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://www.cnn.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initiaizing()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="initiaizing" is-config="true" duration-ms="6277" started-at="2019-03-29T04:15:32Z" finished-at="2019-03-29T04:15:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiaizing -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="10" started-at="2019-03-29T04:15:39Z" finished-at="2019-03-29T04:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testParenting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testParenting()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testParenting" duration-ms="3903" started-at="2019-03-29T04:15:39Z" finished-at="2019-03-29T04:15:43Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Verify Parenting Content in Health Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testParenting -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="4703" started-at="2019-03-29T04:15:43Z" finished-at="2019-03-29T04:15:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="649" started-at="2019-03-29T04:15:47Z" finished-at="2019-03-29T04:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testParenting status=SUCCESS method=TestCnnHealth.testParenting()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Verify Parenting Content in Health Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="2" started-at="2019-03-29T04:15:48Z" finished-at="2019-03-29T04:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testSetBottomPoliticsCongress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSetBottomPoliticsCongress()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testSetBottomPoliticsCongress" duration-ms="10294" started-at="2019-03-29T04:15:48Z" finished-at="2019-03-29T04:15:58Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Verify Content Politics Health Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSetBottomPoliticsCongress -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="2827" started-at="2019-03-29T04:15:58Z" finished-at="2019-03-29T04:16:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="100" started-at="2019-03-29T04:16:01Z" finished-at="2019-03-29T04:16:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetBottomPoliticsCongress status=SUCCESS method=TestCnnHealth.testSetBottomPoliticsCongress()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Verify Content Politics Health Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:16:01Z" finished-at="2019-03-29T04:16:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testSetBottomWorldAsianews()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSetBottomWorldAsianews()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testSetBottomWorldAsianews" duration-ms="3024" started-at="2019-03-29T04:16:01Z" finished-at="2019-03-29T04:16:04Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Verify World Asia News in Health Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSetBottomWorldAsianews -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="2980" started-at="2019-03-29T04:16:04Z" finished-at="2019-03-29T04:16:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="44" started-at="2019-03-29T04:16:07Z" finished-at="2019-03-29T04:16:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetBottomWorldAsianews status=SUCCESS method=TestCnnHealth.testSetBottomWorldAsianews()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Verify World Asia News in Health Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:16:07Z" finished-at="2019-03-29T04:16:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testSetFirstIMG()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSetFirstIMG()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testSetFirstIMG" duration-ms="137" started-at="2019-03-29T04:16:07Z" finished-at="2019-03-29T04:16:07Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Verify IMAGE in Health Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSetFirstIMG -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="2497" started-at="2019-03-29T04:16:07Z" finished-at="2019-03-29T04:16:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="51" started-at="2019-03-29T04:16:10Z" finished-at="2019-03-29T04:16:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetFirstIMG status=SUCCESS method=TestCnnHealth.testSetFirstIMG()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Verify IMAGE in Health Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:16:10Z" finished-at="2019-03-29T04:16:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testSetHouseStoris() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSetHouseStoris()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testSetHouseStoris" duration-ms="7850" started-at="2019-03-29T04:16:10Z" finished-at="2019-03-29T04:16:18Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Politics]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSetHouseStoris -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="2521" started-at="2019-03-29T04:16:18Z" finished-at="2019-03-29T04:16:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="112" started-at="2019-03-29T04:16:20Z" finished-at="2019-03-29T04:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetHouseStoris status=SUCCESS method=TestCnnHealth.testSetHouseStoris()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Politics]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:16:20Z" finished-at="2019-03-29T04:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testSetPaidPartnerIMG()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSetPaidPartnerIMG()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testSetPaidPartnerIMG" duration-ms="1521" started-at="2019-03-29T04:16:20Z" finished-at="2019-03-29T04:16:22Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Verify IMAGE in Health Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSetPaidPartnerIMG -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="2986" started-at="2019-03-29T04:16:22Z" finished-at="2019-03-29T04:16:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="36" started-at="2019-03-29T04:16:25Z" finished-at="2019-03-29T04:16:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetPaidPartnerIMG status=SUCCESS method=TestCnnHealth.testSetPaidPartnerIMG()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Verify IMAGE in Health Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:16:25Z" finished-at="2019-03-29T04:16:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testSetPopulerSixthTopic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSetPopulerSixthTopic()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testSetPopulerSixthTopic" duration-ms="156" started-at="2019-03-29T04:16:25Z" finished-at="2019-03-29T04:16:25Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Verify Popular Topics Health Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSetPopulerSixthTopic -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="2465" started-at="2019-03-29T04:16:25Z" finished-at="2019-03-29T04:16:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="38" started-at="2019-03-29T04:16:28Z" finished-at="2019-03-29T04:16:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetPopulerSixthTopic status=SUCCESS method=TestCnnHealth.testSetPopulerSixthTopic()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Verify Popular Topics Health Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:16:28Z" finished-at="2019-03-29T04:16:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testSetStorisSix()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSetStorisSix()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testSetStorisSix" duration-ms="115" started-at="2019-03-29T04:16:28Z" finished-at="2019-03-29T04:16:28Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Verify Content in Health Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSetStorisSix -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="2850" started-at="2019-03-29T04:16:28Z" finished-at="2019-03-29T04:16:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:16:31Z" finished-at="2019-03-29T04:16:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetStorisSix status=SUCCESS method=TestCnnHealth.testSetStorisSix()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Verify Content in Health Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="2" started-at="2019-03-29T04:16:31Z" finished-at="2019-03-29T04:16:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testSetTopStoris()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSetTopStoris()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testSetTopStoris" duration-ms="197" started-at="2019-03-29T04:16:31Z" finished-at="2019-03-29T04:16:31Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Verify Top Stories in Health Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSetTopStoris -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="2703" started-at="2019-03-29T04:16:31Z" finished-at="2019-03-29T04:16:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="34" started-at="2019-03-29T04:16:34Z" finished-at="2019-03-29T04:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetTopStoris status=SUCCESS method=TestCnnHealth.testSetTopStoris()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Verify Top Stories in Health Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:16:34Z" finished-at="2019-03-29T04:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnhealthpage.TestCnnHealth.testSetbottomWorldAustralia()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSetbottomWorldAustralia()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="testSetbottomWorldAustralia" duration-ms="186" started-at="2019-03-29T04:16:34Z" finished-at="2019-03-29T04:16:34Z">
          <reporter-output>
            <line>
              <![CDATA[CnnHealth  -> Verify Australia News in Health Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSetbottomWorldAustralia -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="init" is-config="true" duration-ms="3377" started-at="2019-03-29T04:16:34Z" finished-at="2019-03-29T04:16:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="afterEachTestMethod" is-config="true" duration-ms="42" started-at="2019-03-29T04:16:37Z" finished-at="2019-03-29T04:16:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetbottomWorldAustralia status=SUCCESS method=TestCnnHealth.testSetbottomWorldAustralia()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3] output=CnnHealth  -> Verify Australia News in Health Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testcnnhealthpage.TestCnnHealth@32e6e9c3]" name="cleanUp" is-config="true" duration-ms="221" started-at="2019-03-29T04:16:37Z" finished-at="2019-03-29T04:16:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testcnnhealthpage.TestCnnHealth -->
      <class name="testcnnbusiness.TestCnnBusinessPage">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testcnnbusiness.TestCnnBusinessPage@4590c9c3]" name="extentSetup" is-config="true" duration-ms="333" started-at="2019-03-29T04:15:29Z" finished-at="2019-03-29T04:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@75d4a80f]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/jewal/IntelliJ/WebAutomationGroup3/CNNnews/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:testcnnbusiness.TestCnnBusinessPage@4590c9c3]" name="generateReport" is-config="true" duration-ms="26" started-at="2019-03-29T04:32:20Z" finished-at="2019-03-29T04:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testcnnbusiness.TestCnnBusinessPage -->
      <class name="testhompage.TestHomePage">
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="setUp" is-config="true" duration-ms="1411" started-at="2019-03-29T04:20:45Z" finished-at="2019-03-29T04:20:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[saucelabs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://www.cnn.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="initialize" is-config="true" duration-ms="10550" started-at="2019-03-29T04:20:47Z" finished-at="2019-03-29T04:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:20:57Z" finished-at="2019-03-29T04:20:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.clickOnSerchTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="clickOnSerchTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="clickOnSerchTab" duration-ms="691" started-at="2019-03-29T04:20:57Z" finished-at="2019-03-29T04:20:58Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Search Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- clickOnSerchTab -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="4207" started-at="2019-03-29T04:20:58Z" finished-at="2019-03-29T04:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="26" started-at="2019-03-29T04:21:02Z" finished-at="2019-03-29T04:21:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnSerchTab status=SUCCESS method=TestHomePage.clickOnSerchTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Search Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="searchWithSearchIteems()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="searchWithSearchIteems" duration-ms="11570" started-at="2019-03-29T04:21:02Z" finished-at="2019-03-29T04:21:14Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  ->  Christchurch]]>
            </line>
          </reporter-output>
        </test-method> <!-- searchWithSearchIteems -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:02Z" finished-at="2019-03-29T04:21:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.searchWithSearchIteems() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="7019" started-at="2019-03-29T04:21:14Z" finished-at="2019-03-29T04:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:21:21Z" finished-at="2019-03-29T04:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchWithSearchIteems status=SUCCESS method=TestHomePage.searchWithSearchIteems()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  ->  Christchurch]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:21:21Z" finished-at="2019-03-29T04:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testAfricaSorce()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testAfricaSorce()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testAfricaSorce" duration-ms="184" started-at="2019-03-29T04:21:21Z" finished-at="2019-03-29T04:21:21Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Africa Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testAfricaSorce -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2814" started-at="2019-03-29T04:21:21Z" finished-at="2019-03-29T04:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="30" started-at="2019-03-29T04:21:24Z" finished-at="2019-03-29T04:21:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAfricaSorce status=SUCCESS method=TestHomePage.testAfricaSorce()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Africa Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testAmericaSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testAmericaSource" duration-ms="64" started-at="2019-03-29T04:21:24Z" finished-at="2019-03-29T04:21:24Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom America Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testAmericaSource -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:24Z" finished-at="2019-03-29T04:21:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testAmericaSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2706" started-at="2019-03-29T04:21:24Z" finished-at="2019-03-29T04:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="29" started-at="2019-03-29T04:21:27Z" finished-at="2019-03-29T04:21:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAmericaSource status=SUCCESS method=TestHomePage.testAmericaSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom America Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:27Z" finished-at="2019-03-29T04:21:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testArtSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testArtSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testArtSource" duration-ms="97" started-at="2019-03-29T04:21:27Z" finished-at="2019-03-29T04:21:27Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Art Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testArtSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2299" started-at="2019-03-29T04:21:27Z" finished-at="2019-03-29T04:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="530" started-at="2019-03-29T04:21:29Z" finished-at="2019-03-29T04:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testArtSource status=SUCCESS method=TestHomePage.testArtSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Art Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:29Z" finished-at="2019-03-29T04:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testAsiaSoure()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testAsiaSoure()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testAsiaSoure" duration-ms="51" started-at="2019-03-29T04:21:29Z" finished-at="2019-03-29T04:21:30Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Asia Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testAsiaSoure -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2830" started-at="2019-03-29T04:21:30Z" finished-at="2019-03-29T04:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:21:32Z" finished-at="2019-03-29T04:21:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAsiaSoure status=SUCCESS method=TestHomePage.testAsiaSoure()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Asia Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:32Z" finished-at="2019-03-29T04:21:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testBaseBallSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testBaseBallSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testBaseBallSource" duration-ms="99" started-at="2019-03-29T04:21:32Z" finished-at="2019-03-29T04:21:32Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom BaseBall Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testBaseBallSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3314" started-at="2019-03-29T04:21:32Z" finished-at="2019-03-29T04:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="22" started-at="2019-03-29T04:21:36Z" finished-at="2019-03-29T04:21:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBaseBallSource status=SUCCESS method=TestHomePage.testBaseBallSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom BaseBall Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:36Z" finished-at="2019-03-29T04:21:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testBasketBallSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testBasketBallSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testBasketBallSource" duration-ms="30" started-at="2019-03-29T04:21:36Z" finished-at="2019-03-29T04:21:36Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom BasketBall Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testBasketBallSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2531" started-at="2019-03-29T04:21:36Z" finished-at="2019-03-29T04:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="27" started-at="2019-03-29T04:21:38Z" finished-at="2019-03-29T04:21:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBasketBallSource status=SUCCESS method=TestHomePage.testBasketBallSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom BasketBall Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:38Z" finished-at="2019-03-29T04:21:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testBottomHome()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testBottomHome()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testBottomHome" duration-ms="24" started-at="2019-03-29T04:21:38Z" finished-at="2019-03-29T04:21:38Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Home Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testBottomHome -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2684" started-at="2019-03-29T04:21:38Z" finished-at="2019-03-29T04:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="21" started-at="2019-03-29T04:21:41Z" finished-at="2019-03-29T04:21:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBottomHome status=SUCCESS method=TestHomePage.testBottomHome()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Home Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testBusinessHeadlinestab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testBusinessHeadlinestab" duration-ms="36" started-at="2019-03-29T04:21:41Z" finished-at="2019-03-29T04:21:41Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title Business Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testBusinessHeadlinestab -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:41Z" finished-at="2019-03-29T04:21:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testBusinessHeadlinestab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2183" started-at="2019-03-29T04:21:41Z" finished-at="2019-03-29T04:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:21:43Z" finished-at="2019-03-29T04:21:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBusinessHeadlinestab status=SUCCESS method=TestHomePage.testBusinessHeadlinestab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title Business Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="2" started-at="2019-03-29T04:21:43Z" finished-at="2019-03-29T04:21:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testCNNFilmSOurce()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testCNNFilmSOurce()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testCNNFilmSOurce" duration-ms="4822" started-at="2019-03-29T04:21:43Z" finished-at="2019-03-29T04:21:48Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom CNN Film Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCNNFilmSOurce -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3194" started-at="2019-03-29T04:21:48Z" finished-at="2019-03-29T04:21:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="30" started-at="2019-03-29T04:21:51Z" finished-at="2019-03-29T04:21:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCNNFilmSOurce status=SUCCESS method=TestHomePage.testCNNFilmSOurce()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom CNN Film Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:51Z" finished-at="2019-03-29T04:21:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testChinaSource() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testChinaSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testChinaSource" duration-ms="81" started-at="2019-03-29T04:21:51Z" finished-at="2019-03-29T04:21:52Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom China Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testChinaSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3167" started-at="2019-03-29T04:21:52Z" finished-at="2019-03-29T04:21:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:21:55Z" finished-at="2019-03-29T04:21:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testChinaSource status=SUCCESS method=TestHomePage.testChinaSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom China Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testCnnLogo()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testCnnLogo" duration-ms="80" started-at="2019-03-29T04:21:55Z" finished-at="2019-03-29T04:21:55Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify CNN Logo]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCnnLogo -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:21:55Z" finished-at="2019-03-29T04:21:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testCnnLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3075" started-at="2019-03-29T04:21:55Z" finished-at="2019-03-29T04:21:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="47" started-at="2019-03-29T04:21:58Z" finished-at="2019-03-29T04:21:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCnnLogo status=SUCCESS method=TestHomePage.testCnnLogo()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify CNN Logo]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:21:58Z" finished-at="2019-03-29T04:21:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testCollegeFootballSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testCollegeFootballSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testCollegeFootballSource" duration-ms="81" started-at="2019-03-29T04:21:58Z" finished-at="2019-03-29T04:21:58Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom College Football Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCollegeFootballSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3196" started-at="2019-03-29T04:21:58Z" finished-at="2019-03-29T04:22:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:22:01Z" finished-at="2019-03-29T04:22:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCollegeFootballSource status=SUCCESS method=TestHomePage.testCollegeFootballSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom College Football Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:22:01Z" finished-at="2019-03-29T04:22:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testCrimeJusticeSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testCrimeJusticeSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testCrimeJusticeSource" duration-ms="52" started-at="2019-03-29T04:22:01Z" finished-at="2019-03-29T04:22:01Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Crime And Justice Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCrimeJusticeSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3078" started-at="2019-03-29T04:22:01Z" finished-at="2019-03-29T04:22:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="25" started-at="2019-03-29T04:22:04Z" finished-at="2019-03-29T04:22:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCrimeJusticeSource status=SUCCESS method=TestHomePage.testCrimeJusticeSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Crime And Justice Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:22:04Z" finished-at="2019-03-29T04:22:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testDesignSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testDesignSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testDesignSource" duration-ms="66" started-at="2019-03-29T04:22:04Z" finished-at="2019-03-29T04:22:04Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Design Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDesignSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3227" started-at="2019-03-29T04:22:04Z" finished-at="2019-03-29T04:22:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:22:08Z" finished-at="2019-03-29T04:22:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDesignSource status=SUCCESS method=TestHomePage.testDesignSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Design Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testDestinationSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testDestinationSource" duration-ms="8295" started-at="2019-03-29T04:22:08Z" finished-at="2019-03-29T04:22:16Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Destination Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDestinationSource -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:22:08Z" finished-at="2019-03-29T04:22:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testDestinationSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="4312" started-at="2019-03-29T04:22:16Z" finished-at="2019-03-29T04:22:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="29" started-at="2019-03-29T04:22:20Z" finished-at="2019-03-29T04:22:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDestinationSource status=SUCCESS method=TestHomePage.testDestinationSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Destination Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:22:20Z" finished-at="2019-03-29T04:22:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testDigitalStudio()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testDigitalStudio()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testDigitalStudio" duration-ms="492" started-at="2019-03-29T04:22:20Z" finished-at="2019-03-29T04:22:21Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Digital Studio Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDigitalStudio -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2501" started-at="2019-03-29T04:22:21Z" finished-at="2019-03-29T04:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="30" started-at="2019-03-29T04:22:23Z" finished-at="2019-03-29T04:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDigitalStudio status=SUCCESS method=TestHomePage.testDigitalStudio()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Digital Studio Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:22:23Z" finished-at="2019-03-29T04:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testEnargyEnvironmentSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testEnargyEnvironmentSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testEnargyEnvironmentSource" duration-ms="173" started-at="2019-03-29T04:22:23Z" finished-at="2019-03-29T04:22:24Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Energy And Environment Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testEnargyEnvironmentSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2270" started-at="2019-03-29T04:22:24Z" finished-at="2019-03-29T04:22:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="31" started-at="2019-03-29T04:22:26Z" finished-at="2019-03-29T04:22:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEnargyEnvironmentSource status=SUCCESS method=TestHomePage.testEnargyEnvironmentSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Energy And Environment Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:22:26Z" finished-at="2019-03-29T04:22:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testEntertainmentTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testEntertainmentTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testEntertainmentTab" duration-ms="175" started-at="2019-03-29T04:22:26Z" finished-at="2019-03-29T04:22:26Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title Entertainment Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testEntertainmentTab -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2399" started-at="2019-03-29T04:22:26Z" finished-at="2019-03-29T04:22:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="34" started-at="2019-03-29T04:22:28Z" finished-at="2019-03-29T04:22:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEntertainmentTab status=SUCCESS method=TestHomePage.testEntertainmentTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title Entertainment Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:22:28Z" finished-at="2019-03-29T04:22:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testEuropeSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testEuropeSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testEuropeSource" duration-ms="197" started-at="2019-03-29T04:22:28Z" finished-at="2019-03-29T04:22:29Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Europe Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testEuropeSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2545" started-at="2019-03-29T04:22:29Z" finished-at="2019-03-29T04:22:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:22:31Z" finished-at="2019-03-29T04:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEuropeSource status=SUCCESS method=TestHomePage.testEuropeSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Europe Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:22:31Z" finished-at="2019-03-29T04:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testExtremeWeather() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="FAIL" signature="testExtremeWeather()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testExtremeWeather" duration-ms="1188" started-at="2019-03-29T04:22:31Z" finished-at="2019-03-29T04:22:32Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: Element <li class="m-footer__list-item">...</li> is not clickable at point (121, 640). Other element would receive the click: <p class="banner-content" id="alert-box-message">...</p>
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:52334}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: 1de54b4844b25a6e5177f87a0db2ea4e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Element <li class="m-footer__list-item">...</li> is not clickable at point (121, 640). Other element would receive the click: <p class="banner-content" id="alert-box-message">...</p>
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:52334}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: 1de54b4844b25a6e5177f87a0db2ea4e
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy13.click(Unknown Source)
at homepage.HomePage.setExtremeWeather(HomePage.java:198)
at testhompage.TestHomePage.testExtremeWeather(TestHomePage.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Weather Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testExtremeWeather -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3231" started-at="2019-03-29T04:22:32Z" finished-at="2019-03-29T04:22:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="731" started-at="2019-03-29T04:22:36Z" finished-at="2019-03-29T04:22:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testExtremeWeather status=FAILURE method=TestHomePage.testExtremeWeather()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Weather Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:22:36Z" finished-at="2019-03-29T04:22:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testFactsFirst()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testFactsFirst()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testFactsFirst" duration-ms="3132" started-at="2019-03-29T04:22:36Z" finished-at="2019-03-29T04:22:40Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Facts Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFactsFirst -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="4145" started-at="2019-03-29T04:22:40Z" finished-at="2019-03-29T04:22:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:22:44Z" finished-at="2019-03-29T04:22:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFactsFirst status=SUCCESS method=TestHomePage.testFactsFirst()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Facts Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:22:44Z" finished-at="2019-03-29T04:22:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testFashionSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testFashionSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testFashionSource" duration-ms="42" started-at="2019-03-29T04:22:44Z" finished-at="2019-03-29T04:22:44Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Fashion Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFashionSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2799" started-at="2019-03-29T04:22:44Z" finished-at="2019-03-29T04:22:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="24" started-at="2019-03-29T04:22:47Z" finished-at="2019-03-29T04:22:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFashionSource status=SUCCESS method=TestHomePage.testFashionSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Fashion Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:22:47Z" finished-at="2019-03-29T04:22:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testFitnessSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testFitnessSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testFitnessSource" duration-ms="322" started-at="2019-03-29T04:22:47Z" finished-at="2019-03-29T04:22:47Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Fitness Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFitnessSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3170" started-at="2019-03-29T04:22:47Z" finished-at="2019-03-29T04:22:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="30" started-at="2019-03-29T04:22:50Z" finished-at="2019-03-29T04:22:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFitnessSource status=SUCCESS method=TestHomePage.testFitnessSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Fitness Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:22:50Z" finished-at="2019-03-29T04:22:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testFoodAndDrinks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testFoodAndDrinks()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testFoodAndDrinks" duration-ms="41" started-at="2019-03-29T04:22:50Z" finished-at="2019-03-29T04:22:50Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Food And Drinks Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFoodAndDrinks -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3128" started-at="2019-03-29T04:22:50Z" finished-at="2019-03-29T04:22:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:22:53Z" finished-at="2019-03-29T04:22:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFoodAndDrinks status=SUCCESS method=TestHomePage.testFoodAndDrinks()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Food And Drinks Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:22:53Z" finished-at="2019-03-29T04:22:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testFoodSource() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testFoodSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testFoodSource" duration-ms="10051" started-at="2019-03-29T04:22:53Z" finished-at="2019-03-29T04:23:03Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Food Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFoodSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3411" started-at="2019-03-29T04:23:03Z" finished-at="2019-03-29T04:23:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="42" started-at="2019-03-29T04:23:07Z" finished-at="2019-03-29T04:23:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFoodSource status=SUCCESS method=TestHomePage.testFoodSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Food Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:23:07Z" finished-at="2019-03-29T04:23:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testHLNSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testHLNSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testHLNSource" duration-ms="3383" started-at="2019-03-29T04:23:07Z" finished-at="2019-03-29T04:23:10Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom HLN Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testHLNSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3341" started-at="2019-03-29T04:23:10Z" finished-at="2019-03-29T04:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="34" started-at="2019-03-29T04:23:14Z" finished-at="2019-03-29T04:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHLNSource status=SUCCESS method=TestHomePage.testHLNSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom HLN Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:23:14Z" finished-at="2019-03-29T04:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testHealthHeadlinesTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testHealthHeadlinesTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testHealthHeadlinesTab" duration-ms="59" started-at="2019-03-29T04:23:14Z" finished-at="2019-03-29T04:23:14Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title Health Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testHealthHeadlinesTab -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2988" started-at="2019-03-29T04:23:14Z" finished-at="2019-03-29T04:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="48" started-at="2019-03-29T04:23:17Z" finished-at="2019-03-29T04:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHealthHeadlinesTab status=SUCCESS method=TestHomePage.testHealthHeadlinesTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title Health Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testIndiaSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testIndiaSource" duration-ms="97" started-at="2019-03-29T04:23:17Z" finished-at="2019-03-29T04:23:17Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom India Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testIndiaSource -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:23:17Z" finished-at="2019-03-29T04:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testIndiaSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3202" started-at="2019-03-29T04:23:17Z" finished-at="2019-03-29T04:23:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="26" started-at="2019-03-29T04:23:20Z" finished-at="2019-03-29T04:23:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testIndiaSource status=SUCCESS method=TestHomePage.testIndiaSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom India Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:23:20Z" finished-at="2019-03-29T04:23:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testLiveLonger() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLiveLonger()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testLiveLonger" duration-ms="4356" started-at="2019-03-29T04:23:20Z" finished-at="2019-03-29T04:23:24Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Live Longer Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLiveLonger -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="4471" started-at="2019-03-29T04:23:24Z" finished-at="2019-03-29T04:23:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:23:29Z" finished-at="2019-03-29T04:23:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLiveLonger status=SUCCESS method=TestHomePage.testLiveLonger()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Live Longer Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testLiveTVTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testLiveTVTab" duration-ms="161" started-at="2019-03-29T04:23:29Z" finished-at="2019-03-29T04:23:29Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title LiveTV Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLiveTVTab -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:23:29Z" finished-at="2019-03-29T04:23:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testLiveTVTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3048" started-at="2019-03-29T04:23:29Z" finished-at="2019-03-29T04:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:23:32Z" finished-at="2019-03-29T04:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLiveTVTab status=SUCCESS method=TestHomePage.testLiveTVTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title LiveTV Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:23:32Z" finished-at="2019-03-29T04:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testLuxurySource() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLuxurySource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testLuxurySource" duration-ms="80" started-at="2019-03-29T04:23:32Z" finished-at="2019-03-29T04:23:32Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Luxury Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLuxurySource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2418" started-at="2019-03-29T04:23:32Z" finished-at="2019-03-29T04:23:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="33" started-at="2019-03-29T04:23:35Z" finished-at="2019-03-29T04:23:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLuxurySource status=SUCCESS method=TestHomePage.testLuxurySource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Luxury Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:23:35Z" finished-at="2019-03-29T04:23:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testMenuTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testMenuTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testMenuTab" duration-ms="229" started-at="2019-03-29T04:23:35Z" finished-at="2019-03-29T04:23:35Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Menu Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMenuTab -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3356" started-at="2019-03-29T04:23:35Z" finished-at="2019-03-29T04:23:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="31" started-at="2019-03-29T04:23:38Z" finished-at="2019-03-29T04:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMenuTab status=SUCCESS method=TestHomePage.testMenuTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Menu Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:23:38Z" finished-at="2019-03-29T04:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testMiddleEastSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testMiddleEastSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testMiddleEastSource" duration-ms="38" started-at="2019-03-29T04:23:38Z" finished-at="2019-03-29T04:23:38Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Middle East Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMiddleEastSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3207" started-at="2019-03-29T04:23:38Z" finished-at="2019-03-29T04:23:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="26" started-at="2019-03-29T04:23:41Z" finished-at="2019-03-29T04:23:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMiddleEastSource status=SUCCESS method=TestHomePage.testMiddleEastSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Middle East Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testOlympicSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testOlympicSource" duration-ms="42" started-at="2019-03-29T04:23:42Z" finished-at="2019-03-29T04:23:42Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Olympic Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testOlympicSource -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:23:42Z" finished-at="2019-03-29T04:23:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testOlympicSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3184" started-at="2019-03-29T04:23:42Z" finished-at="2019-03-29T04:23:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:23:45Z" finished-at="2019-03-29T04:23:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOlympicSource status=SUCCESS method=TestHomePage.testOlympicSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Olympic Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:23:45Z" finished-at="2019-03-29T04:23:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testOpinionHeadlinesTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testOpinionHeadlinesTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testOpinionHeadlinesTab" duration-ms="73" started-at="2019-03-29T04:23:45Z" finished-at="2019-03-29T04:23:45Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title Opinion Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testOpinionHeadlinesTab -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3238" started-at="2019-03-29T04:23:45Z" finished-at="2019-03-29T04:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:23:48Z" finished-at="2019-03-29T04:23:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOpinionHeadlinesTab status=SUCCESS method=TestHomePage.testOpinionHeadlinesTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title Opinion Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:23:48Z" finished-at="2019-03-29T04:23:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testOpinionSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testOpinionSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testOpinionSource" duration-ms="56" started-at="2019-03-29T04:23:48Z" finished-at="2019-03-29T04:23:48Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Opinion Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testOpinionSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3174" started-at="2019-03-29T04:23:48Z" finished-at="2019-03-29T04:23:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="36" started-at="2019-03-29T04:23:51Z" finished-at="2019-03-29T04:23:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOpinionSource status=SUCCESS method=TestHomePage.testOpinionSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Opinion Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testPoliticsHeadlines()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testPoliticsHeadlines" duration-ms="48" started-at="2019-03-29T04:23:51Z" finished-at="2019-03-29T04:23:51Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title Politics Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testPoliticsHeadlines -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:23:51Z" finished-at="2019-03-29T04:23:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testPoliticsHeadlines()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3045" started-at="2019-03-29T04:23:51Z" finished-at="2019-03-29T04:23:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:23:54Z" finished-at="2019-03-29T04:23:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPoliticsHeadlines status=SUCCESS method=TestHomePage.testPoliticsHeadlines()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title Politics Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:23:55Z" finished-at="2019-03-29T04:23:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testSoccerSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSoccerSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testSoccerSource" duration-ms="47" started-at="2019-03-29T04:23:55Z" finished-at="2019-03-29T04:23:55Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Soccer News Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSoccerSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3252" started-at="2019-03-29T04:23:55Z" finished-at="2019-03-29T04:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:23:58Z" finished-at="2019-03-29T04:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSoccerSource status=SUCCESS method=TestHomePage.testSoccerSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Soccer News Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:23:58Z" finished-at="2019-03-29T04:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testSpaceScince()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSpaceScince()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testSpaceScince" duration-ms="113" started-at="2019-03-29T04:23:58Z" finished-at="2019-03-29T04:23:58Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Space And Science Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSpaceScince -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3030" started-at="2019-03-29T04:23:58Z" finished-at="2019-03-29T04:24:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="36" started-at="2019-03-29T04:24:01Z" finished-at="2019-03-29T04:24:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSpaceScince status=SUCCESS method=TestHomePage.testSpaceScince()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Space And Science Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testSportsHeadlineTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testSportsHeadlineTab" duration-ms="68" started-at="2019-03-29T04:24:01Z" finished-at="2019-03-29T04:24:01Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title Sports Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSportsHeadlineTab -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:24:01Z" finished-at="2019-03-29T04:24:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testSportsHeadlineTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3167" started-at="2019-03-29T04:24:01Z" finished-at="2019-03-29T04:24:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="34" started-at="2019-03-29T04:24:04Z" finished-at="2019-03-29T04:24:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSportsHeadlineTab status=SUCCESS method=TestHomePage.testSportsHeadlineTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title Sports Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:24:04Z" finished-at="2019-03-29T04:24:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testStyleHeadlineTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testStyleHeadlineTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testStyleHeadlineTab" duration-ms="46" started-at="2019-03-29T04:24:04Z" finished-at="2019-03-29T04:24:04Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title Style Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testStyleHeadlineTab -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3154" started-at="2019-03-29T04:24:04Z" finished-at="2019-03-29T04:24:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="33" started-at="2019-03-29T04:24:07Z" finished-at="2019-03-29T04:24:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testStyleHeadlineTab status=SUCCESS method=TestHomePage.testStyleHeadlineTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title Style Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:24:08Z" finished-at="2019-03-29T04:24:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testSupremeCourtSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSupremeCourtSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testSupremeCourtSource" duration-ms="45" started-at="2019-03-29T04:24:08Z" finished-at="2019-03-29T04:24:08Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Supreme Court Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSupremeCourtSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3078" started-at="2019-03-29T04:24:08Z" finished-at="2019-03-29T04:24:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:24:11Z" finished-at="2019-03-29T04:24:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSupremeCourtSource status=SUCCESS method=TestHomePage.testSupremeCourtSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Supreme Court Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:24:11Z" finished-at="2019-03-29T04:24:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testTravelHeadlineTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testTravelHeadlineTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testTravelHeadlineTab" duration-ms="72" started-at="2019-03-29T04:24:11Z" finished-at="2019-03-29T04:24:11Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title Travel Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTravelHeadlineTab -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2753" started-at="2019-03-29T04:24:11Z" finished-at="2019-03-29T04:24:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="31" started-at="2019-03-29T04:24:14Z" finished-at="2019-03-29T04:24:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTravelHeadlineTab status=SUCCESS method=TestHomePage.testTravelHeadlineTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title Travel Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:24:14Z" finished-at="2019-03-29T04:24:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testUSEditionTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testUSEditionTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testUSEditionTab" duration-ms="229" started-at="2019-03-29T04:24:14Z" finished-at="2019-03-29T04:24:14Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title U.S. Edition Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testUSEditionTab -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3233" started-at="2019-03-29T04:24:14Z" finished-at="2019-03-29T04:24:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="34" started-at="2019-03-29T04:24:17Z" finished-at="2019-03-29T04:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUSEditionTab status=SUCCESS method=TestHomePage.testUSEditionTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title U.S. Edition Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testUsHeadlinesTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testUsHeadlinesTab" duration-ms="52" started-at="2019-03-29T04:24:17Z" finished-at="2019-03-29T04:24:17Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title U.S. Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testUsHeadlinesTab -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:24:17Z" finished-at="2019-03-29T04:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testUsHeadlinesTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3097" started-at="2019-03-29T04:24:17Z" finished-at="2019-03-29T04:24:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:24:20Z" finished-at="2019-03-29T04:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUsHeadlinesTab status=SUCCESS method=TestHomePage.testUsHeadlinesTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title U.S. Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:24:20Z" finished-at="2019-03-29T04:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testVideoHeadlineTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testVideoHeadlineTab()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testVideoHeadlineTab" duration-ms="231" started-at="2019-03-29T04:24:20Z" finished-at="2019-03-29T04:24:20Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title Video Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVideoHeadlineTab -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3437" started-at="2019-03-29T04:24:20Z" finished-at="2019-03-29T04:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="24" started-at="2019-03-29T04:24:24Z" finished-at="2019-03-29T04:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVideoHeadlineTab status=SUCCESS method=TestHomePage.testVideoHeadlineTab()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title Video Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:24:24Z" finished-at="2019-03-29T04:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testWellnessSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testWellnessSource()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testWellnessSource" duration-ms="35" started-at="2019-03-29T04:24:24Z" finished-at="2019-03-29T04:24:24Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom Wellness Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testWellnessSource -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2951" started-at="2019-03-29T04:24:24Z" finished-at="2019-03-29T04:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="36" started-at="2019-03-29T04:24:27Z" finished-at="2019-03-29T04:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWellnessSource status=SUCCESS method=TestHomePage.testWellnessSource()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom Wellness Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testWorldHeadlines()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testWorldHeadlines" duration-ms="65" started-at="2019-03-29T04:24:27Z" finished-at="2019-03-29T04:24:27Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Title World Link Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- testWorldHeadlines -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:24:27Z" finished-at="2019-03-29T04:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testWorldHeadlines()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="3260" started-at="2019-03-29T04:24:27Z" finished-at="2019-03-29T04:24:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="29" started-at="2019-03-29T04:24:30Z" finished-at="2019-03-29T04:24:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWorldHeadlines status=SUCCESS method=TestHomePage.testWorldHeadlines()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Title World Link Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:24:30Z" finished-at="2019-03-29T04:24:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.testWorldNews()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testWorldNews()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="testWorldNews" duration-ms="37" started-at="2019-03-29T04:24:30Z" finished-at="2019-03-29T04:24:30Z">
          <reporter-output>
            <line>
              <![CDATA[HomePage  -> Verify Bottom World News Source]]>
            </line>
          </reporter-output>
        </test-method> <!-- testWorldNews -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="4001" started-at="2019-03-29T04:24:30Z" finished-at="2019-03-29T04:24:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="38" started-at="2019-03-29T04:24:34Z" finished-at="2019-03-29T04:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWorldNews status=SUCCESS method=TestHomePage.testWorldNews()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=HomePage  -> Verify Bottom World News Source]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:24:34Z" finished-at="2019-03-29T04:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhompage.TestHomePage.titleMatching()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="titleMatching()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="titleMatching" duration-ms="7" started-at="2019-03-29T04:24:34Z" finished-at="2019-03-29T04:24:34Z">
          <reporter-output>
            <line>
              <![CDATA[TestHomePage  -> Verify Page Title ]]>
            </line>
          </reporter-output>
        </test-method> <!-- titleMatching -->
        <test-method status="PASS" signature="init()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="init" is-config="true" duration-ms="2956" started-at="2019-03-29T04:24:34Z" finished-at="2019-03-29T04:24:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="afterEachTestMethod" is-config="true" duration-ms="38" started-at="2019-03-29T04:24:37Z" finished-at="2019-03-29T04:24:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=titleMatching status=SUCCESS method=TestHomePage.titleMatching()[pri:0, instance:testhompage.TestHomePage@2344fc66] output=TestHomePage  -> Verify Page Title ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhompage.TestHomePage@2344fc66]" name="cleanUp" is-config="true" duration-ms="902" started-at="2019-03-29T04:24:37Z" finished-at="2019-03-29T04:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testhompage.TestHomePage -->
      <class name="testcnnworld.TestCNNWorld">
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="setUp" is-config="true" duration-ms="1437" started-at="2019-03-29T04:16:37Z" finished-at="2019-03-29T04:16:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[saucelabs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://www.cnn.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="initialization" is-config="true" duration-ms="5445" started-at="2019-03-29T04:16:39Z" finished-at="2019-03-29T04:16:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="testFeatureSection()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testFeatureSection" duration-ms="2764" started-at="2019-03-29T04:16:44Z" finished-at="2019-03-29T04:16:47Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Feature Section in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFeatureSection -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:16:44Z" finished-at="2019-03-29T04:16:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testFeatureSection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2183" started-at="2019-03-29T04:16:47Z" finished-at="2019-03-29T04:16:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="34" started-at="2019-03-29T04:16:49Z" finished-at="2019-03-29T04:16:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFeatureSection status=SUCCESS method=TestCNNWorld.testFeatureSection()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Feature Section in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:16:49Z" finished-at="2019-03-29T04:16:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testFeatureSection3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testFeatureSection3()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testFeatureSection3" duration-ms="177" started-at="2019-03-29T04:16:49Z" finished-at="2019-03-29T04:16:49Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines5 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFeatureSection3 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2046" started-at="2019-03-29T04:16:49Z" finished-at="2019-03-29T04:16:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="31" started-at="2019-03-29T04:16:51Z" finished-at="2019-03-29T04:16:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFeatureSection3 status=SUCCESS method=TestCNNWorld.testFeatureSection3()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines5 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="FAIL" signature="testFeatureSection4()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testFeatureSection4" duration-ms="10086" started-at="2019-03-29T04:16:52Z" finished-at="2019-03-29T04:17:02Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//section[@id='world-zone-3']/div[6]/div[2]/div/ul/li[6]"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50126}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: 074d33ef94d4e3881b0a5ccd7181f1ef
*** Element info: {Using=xpath, value=//section[@id='world-zone-3']/div[6]/div[2]/div/ul/li[6]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//section[@id='world-zone-3']/div[6]/div[2]/div/ul/li[6]"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50126}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: 074d33ef94d4e3881b0a5ccd7181f1ef
*** Element info: {Using=xpath, value=//section[@id='world-zone-3']/div[6]/div[2]/div/ul/li[6]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.isSelected(Unknown Source)
at cnnworld.CNNWorld.setFeatureSection4(CNNWorld.java:137)
at testcnnworld.TestCNNWorld.testFeatureSection4(TestCNNWorld.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines6 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFeatureSection4 -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:16:52Z" finished-at="2019-03-29T04:16:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testFeatureSection4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2911" started-at="2019-03-29T04:17:02Z" finished-at="2019-03-29T04:17:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="1280" started-at="2019-03-29T04:17:05Z" finished-at="2019-03-29T04:17:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFeatureSection4 status=FAILURE method=TestCNNWorld.testFeatureSection4()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines6 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:17:06Z" finished-at="2019-03-29T04:17:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testHeadlines1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testHeadlines1()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testHeadlines1" duration-ms="41" started-at="2019-03-29T04:17:06Z" finished-at="2019-03-29T04:17:06Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testHeadlines1 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2969" started-at="2019-03-29T04:17:06Z" finished-at="2019-03-29T04:17:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="48" started-at="2019-03-29T04:17:09Z" finished-at="2019-03-29T04:17:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeadlines1 status=SUCCESS method=TestCNNWorld.testHeadlines1()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:17:09Z" finished-at="2019-03-29T04:17:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testHeadlines3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testHeadlines3()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testHeadlines3" duration-ms="277" started-at="2019-03-29T04:17:09Z" finished-at="2019-03-29T04:17:09Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines2 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testHeadlines3 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2303" started-at="2019-03-29T04:17:09Z" finished-at="2019-03-29T04:17:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="36" started-at="2019-03-29T04:17:11Z" finished-at="2019-03-29T04:17:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeadlines3 status=SUCCESS method=TestCNNWorld.testHeadlines3()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines2 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:17:11Z" finished-at="2019-03-29T04:17:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testHeadlines4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testHeadlines4()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testHeadlines4" duration-ms="524" started-at="2019-03-29T04:17:11Z" finished-at="2019-03-29T04:17:12Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines3 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testHeadlines4 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2009" started-at="2019-03-29T04:17:12Z" finished-at="2019-03-29T04:17:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="39" started-at="2019-03-29T04:17:14Z" finished-at="2019-03-29T04:17:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeadlines4 status=SUCCESS method=TestCNNWorld.testHeadlines4()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines3 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testHeadlines5()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testHeadlines5" duration-ms="203" started-at="2019-03-29T04:17:14Z" finished-at="2019-03-29T04:17:14Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines4 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testHeadlines5 -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:14Z" finished-at="2019-03-29T04:17:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testHeadlines5()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="1920" started-at="2019-03-29T04:17:14Z" finished-at="2019-03-29T04:17:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="37" started-at="2019-03-29T04:17:16Z" finished-at="2019-03-29T04:17:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeadlines5 status=SUCCESS method=TestCNNWorld.testHeadlines5()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines4 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:17:16Z" finished-at="2019-03-29T04:17:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testHeadlones2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testHeadlones2()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testHeadlones2" duration-ms="119" started-at="2019-03-29T04:17:16Z" finished-at="2019-03-29T04:17:16Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines1 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testHeadlones2 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="1881" started-at="2019-03-29T04:17:16Z" finished-at="2019-03-29T04:17:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="31" started-at="2019-03-29T04:17:18Z" finished-at="2019-03-29T04:17:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeadlones2 status=SUCCESS method=TestCNNWorld.testHeadlones2()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines1 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:18Z" finished-at="2019-03-29T04:17:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLatestStories()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories" duration-ms="163" started-at="2019-03-29T04:17:18Z" finished-at="2019-03-29T04:17:18Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines7 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2159" started-at="2019-03-29T04:17:18Z" finished-at="2019-03-29T04:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="27" started-at="2019-03-29T04:17:21Z" finished-at="2019-03-29T04:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories status=SUCCESS method=TestCNNWorld.testLatestStories()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines7 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testLatestStories11()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories11" duration-ms="208" started-at="2019-03-29T04:17:21Z" finished-at="2019-03-29T04:17:21Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines15 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories11 -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:21Z" finished-at="2019-03-29T04:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories11()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2029" started-at="2019-03-29T04:17:21Z" finished-at="2019-03-29T04:17:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:17:23Z" finished-at="2019-03-29T04:17:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories11 status=SUCCESS method=TestCNNWorld.testLatestStories11()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines15 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:23Z" finished-at="2019-03-29T04:17:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories12()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLatestStories12()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories12" duration-ms="173" started-at="2019-03-29T04:17:23Z" finished-at="2019-03-29T04:17:23Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines16 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories12 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2802" started-at="2019-03-29T04:17:23Z" finished-at="2019-03-29T04:17:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="61" started-at="2019-03-29T04:17:26Z" finished-at="2019-03-29T04:17:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories12 status=SUCCESS method=TestCNNWorld.testLatestStories12()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines16 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:26Z" finished-at="2019-03-29T04:17:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories13()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLatestStories13()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories13" duration-ms="515" started-at="2019-03-29T04:17:26Z" finished-at="2019-03-29T04:17:26Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines17 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories13 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="3213" started-at="2019-03-29T04:17:26Z" finished-at="2019-03-29T04:17:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="42" started-at="2019-03-29T04:17:30Z" finished-at="2019-03-29T04:17:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories13 status=SUCCESS method=TestCNNWorld.testLatestStories13()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines17 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testLatestStories2()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories2" duration-ms="17" started-at="2019-03-29T04:17:30Z" finished-at="2019-03-29T04:17:30Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines8 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories2 -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:30Z" finished-at="2019-03-29T04:17:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2912" started-at="2019-03-29T04:17:30Z" finished-at="2019-03-29T04:17:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="32" started-at="2019-03-29T04:17:33Z" finished-at="2019-03-29T04:17:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories2 status=SUCCESS method=TestCNNWorld.testLatestStories2()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines8 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:33Z" finished-at="2019-03-29T04:17:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLatestStories4()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories4" duration-ms="70" started-at="2019-03-29T04:17:33Z" finished-at="2019-03-29T04:17:33Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines9 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories4 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2684" started-at="2019-03-29T04:17:33Z" finished-at="2019-03-29T04:17:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="27" started-at="2019-03-29T04:17:35Z" finished-at="2019-03-29T04:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories4 status=SUCCESS method=TestCNNWorld.testLatestStories4()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines9 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testLatestStories5()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories5" duration-ms="38" started-at="2019-03-29T04:17:35Z" finished-at="2019-03-29T04:17:35Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines10 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories5 -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:35Z" finished-at="2019-03-29T04:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories5()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="3429" started-at="2019-03-29T04:17:35Z" finished-at="2019-03-29T04:17:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="38" started-at="2019-03-29T04:17:39Z" finished-at="2019-03-29T04:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories5 status=SUCCESS method=TestCNNWorld.testLatestStories5()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines10 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:17:39Z" finished-at="2019-03-29T04:17:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories6()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLatestStories6()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories6" duration-ms="106" started-at="2019-03-29T04:17:39Z" finished-at="2019-03-29T04:17:39Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines11 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories6 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="3396" started-at="2019-03-29T04:17:39Z" finished-at="2019-03-29T04:17:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="45" started-at="2019-03-29T04:17:42Z" finished-at="2019-03-29T04:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories6 status=SUCCESS method=TestCNNWorld.testLatestStories6()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines11 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:17:42Z" finished-at="2019-03-29T04:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories7()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testLatestStories7()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories7" duration-ms="6656" started-at="2019-03-29T04:17:42Z" finished-at="2019-03-29T04:17:49Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines12 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories7 -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="1885" started-at="2019-03-29T04:17:49Z" finished-at="2019-03-29T04:17:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="28" started-at="2019-03-29T04:17:51Z" finished-at="2019-03-29T04:17:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories7 status=SUCCESS method=TestCNNWorld.testLatestStories7()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines12 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testLatestStories8()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories8" duration-ms="172" started-at="2019-03-29T04:17:51Z" finished-at="2019-03-29T04:17:51Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines13 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories8 -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:51Z" finished-at="2019-03-29T04:17:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories8()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="3218" started-at="2019-03-29T04:17:51Z" finished-at="2019-03-29T04:17:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="38" started-at="2019-03-29T04:17:54Z" finished-at="2019-03-29T04:17:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories8 status=SUCCESS method=TestCNNWorld.testLatestStories8()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines13 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testLatestStories9()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testLatestStories9" duration-ms="4718" started-at="2019-03-29T04:17:54Z" finished-at="2019-03-29T04:17:59Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Headlines14 in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testLatestStories9 -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:17:54Z" finished-at="2019-03-29T04:17:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testLatestStories9() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="2364" started-at="2019-03-29T04:17:59Z" finished-at="2019-03-29T04:18:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="34" started-at="2019-03-29T04:18:02Z" finished-at="2019-03-29T04:18:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLatestStories9 status=SUCCESS method=TestCNNWorld.testLatestStories9()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Headlines14 in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testTopVisibeIMG()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="testTopVisibeIMG" duration-ms="252" started-at="2019-03-29T04:18:02Z" finished-at="2019-03-29T04:18:02Z">
          <reporter-output>
            <line>
              <![CDATA[CNNWorld  -> Verify Image in Cnn World Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testTopVisibeIMG -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:18:02Z" finished-at="2019-03-29T04:18:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnworld.TestCNNWorld.testTopVisibeIMG()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="init()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="init" is-config="true" duration-ms="4628" started-at="2019-03-29T04:18:02Z" finished-at="2019-03-29T04:18:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="afterEachTestMethod" is-config="true" duration-ms="36" started-at="2019-03-29T04:18:06Z" finished-at="2019-03-29T04:18:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTopVisibeIMG status=SUCCESS method=TestCNNWorld.testTopVisibeIMG()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb] output=CNNWorld  -> Verify Image in Cnn World Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testcnnworld.TestCNNWorld@5056dfcb]" name="cleanUp" is-config="true" duration-ms="425" started-at="2019-03-29T04:18:07Z" finished-at="2019-03-29T04:18:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testcnnworld.TestCNNWorld -->
      <class name="testDBSearch.TestSearch">
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testDBSearch.TestSearch@2669b199]" name="setUp" is-config="true" duration-ms="1495" started-at="2019-03-29T04:19:49Z" finished-at="2019-03-29T04:19:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[saucelabs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://www.cnn.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initialized()[pri:0, instance:testDBSearch.TestSearch@2669b199]" name="initialized" is-config="true" duration-ms="10439" started-at="2019-03-29T04:19:50Z" finished-at="2019-03-29T04:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialized -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testDBSearch.TestSearch@2669b199]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:20:00Z" finished-at="2019-03-29T04:20:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testDBSearch.TestSearch.testFromDBsearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testFromDBsearch()[pri:0, instance:testDBSearch.TestSearch@2669b199]" name="testFromDBsearch" duration-ms="43533" started-at="2019-03-29T04:20:00Z" finished-at="2019-03-29T04:20:44Z">
          <reporter-output>
            <line>
              <![CDATA[TestSearch : ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFromDBsearch -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testDBSearch.TestSearch@2669b199]" name="afterEachTestMethod" is-config="true" duration-ms="20" started-at="2019-03-29T04:20:44Z" finished-at="2019-03-29T04:20:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFromDBsearch status=SUCCESS method=TestSearch.testFromDBsearch()[pri:0, instance:testDBSearch.TestSearch@2669b199] output=TestSearch : ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testDBSearch.TestSearch@2669b199]" name="cleanUp" is-config="true" duration-ms="212" started-at="2019-03-29T04:20:44Z" finished-at="2019-03-29T04:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testDBSearch.TestSearch -->
      <class name="testcnnuspage.TestCnnUsPage">
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="setUp" is-config="true" duration-ms="1763" started-at="2019-03-29T04:18:07Z" finished-at="2019-03-29T04:18:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[saucelabs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[http://www.cnn.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="Initializing()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Initializing" is-config="true" duration-ms="5931" started-at="2019-03-29T04:18:09Z" finished-at="2019-03-29T04:18:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initializing -->
        <test-method status="PASS" signature="testCurrentUrl()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testCurrentUrl" duration-ms="116" started-at="2019-03-29T04:18:15Z" finished-at="2019-03-29T04:18:15Z">
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify url in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testCurrentUrl -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:18:15Z" finished-at="2019-03-29T04:18:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testCurrentUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="2388" started-at="2019-03-29T04:18:15Z" finished-at="2019-03-29T04:18:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="30" started-at="2019-03-29T04:18:17Z" finished-at="2019-03-29T04:18:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCurrentUrl status=SUCCESS method=TestCnnUsPage.testCurrentUrl()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify url in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="FAIL" signature="testalltextfromUsPage()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testalltextfromUsPage" duration-ms="10083" started-at="2019-03-29T04:18:17Z" finished-at="2019-03-29T04:18:27Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".cn.cn-list-xs.cn--idx-0.cn-container_DCB8F55B-ECE9-602C-1A45-5919511B4582.cn--expandable.cn--collapsed"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50890}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: dcb9afd630fcacb57c2b9bf40f399a64
*** Element info: {Using=css selector, value=.cn.cn-list-xs.cn--idx-0.cn-container_DCB8F55B-ECE9-602C-1A45-5919511B4582.cn--expandable.cn--collapsed}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".cn.cn-list-xs.cn--idx-0.cn-container_DCB8F55B-ECE9-602C-1A45-5919511B4582.cn--expandable.cn--collapsed"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50890}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: dcb9afd630fcacb57c2b9bf40f399a64
*** Element info: {Using=css selector, value=.cn.cn-list-xs.cn--idx-0.cn-container_DCB8F55B-ECE9-602C-1A45-5919511B4582.cn--expandable.cn--collapsed}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.getText(Unknown Source)
at cnnuspage.CnnUsPage.setalltextfromUsPage(CnnUsPage.java:77)
at testcnnuspage.TestCnnUsPage.testalltextfromUsPage(TestCnnUsPage.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify Stories 2 in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testalltextfromUsPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:18:17Z" finished-at="2019-03-29T04:18:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testalltextfromUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="2535" started-at="2019-03-29T04:18:27Z" finished-at="2019-03-29T04:18:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="1318" started-at="2019-03-29T04:18:30Z" finished-at="2019-03-29T04:18:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testalltextfromUsPage status=FAILURE method=TestCnnUsPage.testalltextfromUsPage()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify Stories 2 in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:18:31Z" finished-at="2019-03-29T04:18:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testsetBottomTopics()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testsetBottomTopics()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testsetBottomTopics" duration-ms="84" started-at="2019-03-29T04:18:31Z" finished-at="2019-03-29T04:18:31Z">
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify Bottom topics in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testsetBottomTopics -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="4024" started-at="2019-03-29T04:18:31Z" finished-at="2019-03-29T04:18:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="35" started-at="2019-03-29T04:18:35Z" finished-at="2019-03-29T04:18:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testsetBottomTopics status=SUCCESS method=TestCnnUsPage.testsetBottomTopics()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify Bottom topics in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testsetImage()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testsetImage" duration-ms="162" started-at="2019-03-29T04:18:35Z" finished-at="2019-03-29T04:18:35Z">
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify IMAGE in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testsetImage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:18:35Z" finished-at="2019-03-29T04:18:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testsetImage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="3516" started-at="2019-03-29T04:18:35Z" finished-at="2019-03-29T04:18:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="42" started-at="2019-03-29T04:18:39Z" finished-at="2019-03-29T04:18:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testsetImage status=SUCCESS method=TestCnnUsPage.testsetImage()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify IMAGE in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="FAIL" signature="testsetLastImg()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testsetLastImg" duration-ms="10078" started-at="2019-03-29T04:18:39Z" finished-at="2019-03-29T04:18:49Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//section[@id='homepage4-zone-7']/div/div/div/ul/li/article/div/div/a/img"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50890}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: dcb9afd630fcacb57c2b9bf40f399a64
*** Element info: {Using=xpath, value=//section[@id='homepage4-zone-7']/div/div/div/ul/li/article/div/div/a/img}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//section[@id='homepage4-zone-7']/div/div/div/ul/li/article/div/div/a/img"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50890}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: dcb9afd630fcacb57c2b9bf40f399a64
*** Element info: {Using=xpath, value=//section[@id='homepage4-zone-7']/div/div/div/ul/li/article/div/div/a/img}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.isDisplayed(Unknown Source)
at cnnuspage.CnnUsPage.setLastImg(CnnUsPage.java:85)
at testcnnuspage.TestCnnUsPage.testsetLastImg(TestCnnUsPage.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify Image in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testsetLastImg -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:18:39Z" finished-at="2019-03-29T04:18:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testsetLastImg()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="2358" started-at="2019-03-29T04:18:49Z" finished-at="2019-03-29T04:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="1441" started-at="2019-03-29T04:18:51Z" finished-at="2019-03-29T04:18:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testsetLastImg status=FAILURE method=TestCnnUsPage.testsetLastImg()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify Image in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:18:53Z" finished-at="2019-03-29T04:18:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testsetStoriestext()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testsetStoriestext()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testsetStoriestext" duration-ms="37" started-at="2019-03-29T04:18:53Z" finished-at="2019-03-29T04:18:53Z">
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify Stories in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testsetStoriestext -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="3062" started-at="2019-03-29T04:18:53Z" finished-at="2019-03-29T04:18:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="43" started-at="2019-03-29T04:18:56Z" finished-at="2019-03-29T04:18:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testsetStoriestext status=SUCCESS method=TestCnnUsPage.testsetStoriestext()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify Stories in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="testsetStoriestext1()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testsetStoriestext1" duration-ms="237" started-at="2019-03-29T04:18:56Z" finished-at="2019-03-29T04:18:56Z">
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify Stories 1 in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testsetStoriestext1 -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:18:56Z" finished-at="2019-03-29T04:18:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testsetStoriestext1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="4702" started-at="2019-03-29T04:18:56Z" finished-at="2019-03-29T04:19:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="31" started-at="2019-03-29T04:19:01Z" finished-at="2019-03-29T04:19:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testsetStoriestext1 status=SUCCESS method=TestCnnUsPage.testsetStoriestext1()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify Stories 1 in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:19:01Z" finished-at="2019-03-29T04:19:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testsetTable1stImg()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="FAIL" signature="testsetTable1stImg()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testsetTable1stImg" duration-ms="10046" started-at="2019-03-29T04:19:01Z" finished-at="2019-03-29T04:19:11Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='ad ad--epic ad--tablet']//following-sibling::ul/a//following-sibling::li/article/div/div/a/img"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50890}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: dcb9afd630fcacb57c2b9bf40f399a64
*** Element info: {Using=xpath, value=//div[@class='ad ad--epic ad--tablet']//following-sibling::ul/a//following-sibling::li/article/div/div/a/img}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='ad ad--epic ad--tablet']//following-sibling::ul/a//following-sibling::li/article/div/div/a/img"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mds-MacBook-Air.local', ip: 'fe80:0:0:0:48b:8da:39ba:6af8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/5r/blxqt3jn7f9...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50890}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.86, webStorageEnabled: true}
Session ID: dcb9afd630fcacb57c2b9bf40f399a64
*** Element info: {Using=xpath, value=//div[@class='ad ad--epic ad--tablet']//following-sibling::ul/a//following-sibling::li/article/div/div/a/img}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.isDisplayed(Unknown Source)
at cnnuspage.CnnUsPage.setTable1stImg(CnnUsPage.java:55)
at testcnnuspage.TestCnnUsPage.testsetTable1stImg(TestCnnUsPage.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify IMAGE in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testsetTable1stImg -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="2840" started-at="2019-03-29T04:19:11Z" finished-at="2019-03-29T04:19:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="1728" started-at="2019-03-29T04:19:14Z" finished-at="2019-03-29T04:19:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testsetTable1stImg status=FAILURE method=TestCnnUsPage.testsetTable1stImg()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify IMAGE in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-03-29T04:19:16Z" finished-at="2019-03-29T04:19:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testsetaroundtheUsText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testsetaroundtheUsText()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testsetaroundtheUsText" duration-ms="4646" started-at="2019-03-29T04:19:16Z" finished-at="2019-03-29T04:19:20Z">
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify Text in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testsetaroundtheUsText -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="4969" started-at="2019-03-29T04:19:20Z" finished-at="2019-03-29T04:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="38" started-at="2019-03-29T04:19:25Z" finished-at="2019-03-29T04:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testsetaroundtheUsText status=SUCCESS method=TestCnnUsPage.testsetaroundtheUsText()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify Text in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-03-29T04:19:25Z" finished-at="2019-03-29T04:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcnnuspage.TestCnnUsPage.testsetclickingonfb()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testsetclickingonfb()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="testsetclickingonfb" duration-ms="18748" started-at="2019-03-29T04:19:25Z" finished-at="2019-03-29T04:19:44Z">
          <reporter-output>
            <line>
              <![CDATA[CnnUsPage  -> Verify Stories 1 in U.S. Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- testsetclickingonfb -->
        <test-method status="PASS" signature="Init()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="Init" is-config="true" duration-ms="3301" started-at="2019-03-29T04:19:44Z" finished-at="2019-03-29T04:19:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Init -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="afterEachTestMethod" is-config="true" duration-ms="38" started-at="2019-03-29T04:19:47Z" finished-at="2019-03-29T04:19:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testsetclickingonfb status=SUCCESS method=TestCnnUsPage.testsetclickingonfb()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225] output=CnnUsPage  -> Verify Stories 1 in U.S. Page]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testcnnuspage.TestCnnUsPage@6574b225]" name="cleanUp" is-config="true" duration-ms="821" started-at="2019-03-29T04:19:47Z" finished-at="2019-03-29T04:19:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testcnnuspage.TestCnnUsPage -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
